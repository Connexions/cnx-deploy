---
# Installs cnx zope instance with all the dependencies.

# Note, this task list does not work on Darwin.
- name: pre-check system requirements
  fail: msg="CNX's Zope instance can only be deployed to Linux systems"
  when: ansible_system != 'Linux'

# +++
# Prerequisites
# +++

- name: install dependencies
  apt:
    name: "{{ item }}"
    state: present
  become: yes
  with_items:
    - openjdk-7-jre-headless
    - libjpeg-dev
    - libpng-dev
    - build-essential
    # lxml dependencies
    - libxml2-dev
    - libxslt1-dev
    # required by mr.developer
    - git

# +++
# Install virtualenv
# +++

- stat:
    path: "{{ root_prefix }}/var/cnx/venvs"
  register: venvs_dir

- name: ensure the venvs directory exists
  become: yes
  when: not venvs_dir.stat.exists
  file:
    path: "{{ root_prefix }}/var/cnx/venvs"
    state: directory
    mode: 0755
    owner: www-data

- shell: which python2.4
  register: python24_path

# virtualenv 1.7.2 is the last known version to work with Python 2.4.
- name: download virtualenv 1.7.2 (for python 2.4)
  unarchive:
    src: https://pypi.python.org/packages/source/v/virtualenv/virtualenv-1.7.2.tar.gz#md5=b5d63b05373a4344ae099a68875aae78
    dest: .
    copy: no

- name: create the cnx-buildout virtualenv
  become: yes
  shell: "{{ python24_path.stdout }} virtualenv-1.7.2/virtualenv.py {{ root_prefix }}/var/cnx/venvs/cnx-buildout"

- name: delete virtualenv 1.7.2 source code
  file:
    path: virtualenv-1.7.2
    state: absent

# +++
# Install cnx-buildout
# +++

- name: copy cached python packages downloads directory
  become: yes
  become_user: www-data
  copy:
    src: src/cnx-buildout/downloads
    dest: "{{ source_dir }}/cnx-buildout"

- name: run bootstrap
  become: yes
  become_user: www-data
  shell: "{{ root_prefix }}/var/cnx/venvs/cnx-buildout/bin/python bootstrap.py"
  args:
    chdir: "{{ source_dir }}/cnx-buildout"

- name: install simplejson 1.9.2
  become: yes
  pip:
    name: simplejson
    version: 1.9.2
    virtualenv: "{{ root_prefix }}/var/cnx/venvs/cnx-buildout"
    virtualenv_python: python2

- name: run buildout
  become: yes
  shell: ". {{ root_prefix }}/var/cnx/venvs/cnx-buildout/bin/activate && bin/buildout 2>&1 | tee buildout_output.txt"
  args:
    chdir: "{{ source_dir }}/cnx-buildout"

- name: install lxml 3.2.1
  become: yes
  shell: ". bin/libs.sh && {{ root_prefix }}/var/cnx/venvs/cnx-buildout/bin/pip install lxml==3.2.1"
  args:
    chdir: "{{ source_dir }}/cnx-buildout"

- name: assign permissions group
  become: yes
  file:
    path: "{{ root_prefix }}/var/lib/cnx/cnx-buildout"
    state: directory
    recurse: yes
    owner: www-data
    group: www-data

# +++
# Start server
# +++

- stat:
    path: "{{ source_dir }}/cnx-buildout/var/instance.pid"
  register: instance_pid

- name: stop instance
  become: yes
  become_user: www-data
  shell: chdir="{{ source_dir }}/cnx-buildout" ./bin/instance stop
  when: instance_pid.stat.exists

- stat:
    path: "{{ source_dir }}/cnx-buildout/var/zeoserver.pid"
  register: zeoserver_pid

- name: stop zeoserver
  become: yes
  become_user: www-data
  shell: chdir="{{ source_dir }}/cnx-buildout" ./bin/zeoserver stop
  when: zeoserver_pid.stat.exists

- name: start zeoserver
  become: yes
  become_user: www-data
  shell: chdir="{{ source_dir }}/cnx-buildout" ./bin/zeoserver start

# +++
# Create Rhaptos Site
# +++

- name: check whether rhaptos site exists
  register: rhaptos_site
  shell: echo 'print(app.plone)' | ./bin/instance debug | grep PloneSite
  args:
    chdir: "{{ source_dir }}/cnx-buildout"
  ignore_errors: True

- name: create rhaptos site
  shell: "./bin/instance run scripts/create_rhaptos_site.py plone Portal postgres {{ archive_db_user }} {{ archive_db_name }} {{ archive_db_host }} {{ archive_db_port }}"
  args:
    chdir: "{{ source_dir }}/cnx-buildout"
  when: rhaptos_site|failed

- name: start instance
  become: yes
  become_user: www-data
  shell: chdir="{{ source_dir }}/cnx-buildout" ./bin/instance start
