---
# Acquires the data from an archive database.
# See also, https://github.com/Connexions/cnx-archive/issues/197

# Note, this host, 'data_source', is specific to this playbook.
# It's this way on purpose. You'll be grabbing data from a live
# server.

# Please DO NOT use this during peak hours!

- name: gather info
  hosts: data_source
  vars_prompt:
    - name: "db_name"
      prompt: "What database are we extracting?"
      default: repository
    - name: "db_user"
      prompt: "What database user should we use?"
      default: postgres
  tasks:
    - name: dump database without files
      shell: nice -n {{ nice_priority }} pg_dump -U {{ db_user }} --exclude-table-data=files --exclude-table-data=module_files {{ db_name }} >cnxarchive_dump_without_files.sql
    - name: dump database files table for index.cnxml, index.cnxml.html, index_auto_generated.cnxml
      shell: nice -n {{ nice_priority }} psql -U {{ db_user }} {{ db_name }} -c "\copy ( SELECT * FROM files WHERE fileid IN (SELECT fileid FROM module_files WHERE filename IN ('index.cnxml', 'index.cnxml.html', 'index_auto_generated.cnxml') ) ) TO 'cnxarchive_index_files.txt'"
    - name: dump database module files table for index.cnxml, index.cnxml.html, index_auto_generated.cnxml
      shell: nice -n {{ nice_priority }} psql -U {{ db_user }} {{ db_name }} -c "\copy ( SELECT module_ident, CASE WHEN filename IN ('index.cnxml', 'index.cnxml.html', 'index_auto_generated.cnxml') THEN fileid::text ELSE '<dummy-file-id>' END, filename, mimetype FROM module_files ) TO 'cnxarchive_index_module_files.txt'"
    - name: produce dump filename
      shell: echo "cnxarchive_dump.$(date +'%Y-%m-%d').tar.gz"
      register: dump_filename
    - name: create dump .tar.gz file
      shell: nice -n {{ nice_priority }} tar czf {{ dump_filename.stdout }} --remove-files cnxarchive_dump_without_files.sql cnxarchive_index_files.txt cnxarchive_index_module_files.txt
    - name: download dump .tar.gz file
      fetch:
        src: "{{ dump_filename.stdout }}"
        dest: "cnxarchive_dump.tar.gz"
        flat: yes
